0. UNF : with duplicates and with repeating-groups  
1. 1NF: Each column should contain atomic values
2. 2NF: Remove partial dependencies
3. 3NF: Remove transitive dependencies

                Example 
UNF to 1NF :    "Student#	Advisor	Adv-Room	Class1	Class2	Class3"
                to "Student#	Advisor	Adv-Room	Class#"

1NF to 2NF : "OrderID | CustomerID | CustomerName | ProductID | ProductName | Quantity | UnitPrice | TotalPrice |"
             to 
             "| OrderID | CustomerID | ProductID | ProductName | Quantity | UnitPrice | TotalPrice "
             and "| CustomerID | CustomerName |"
             
2NF to 3NF:  "| OrderID | CustomerID | ProductID | ProductName | Quantity | UnitPrice | TotalPrice "
            to 
                "| OrderID | CustomerID | ProductID | Quantity |"
                and "| ProductID | ProductName | UnitPrice |"

Dev Communitiy 
A direct comparison between 
    2NF and 3NF is 
    somewhat misleading as it is not an apples-to-apples comparison. 
    3NF is a more sophisticated case of 2NF, and thus, 
    it wouldnâ€™t be fair to compare these normal forms. 
    
    The choice of normalization depends on your data and end goal. 
    If you aim to reduce the main redundant data, choose 2NF. 
    However, if you are looking to ensure referential integrity, 
    3NF is a better choice.

Geeks:
    S.NO.	2NF(Second Normal Form)	                                        3NF(Third Normal Form)
    1.	It is already in 1NF.	                                            It is already in 1NF as well as in 2NF also.
    2.	In 2NF non-prime attributes are allowed 
        to be functionally dependent on non-prime attributes.	            In 3NF non-prime attributes are only allowed to be functionally dependent on Super key of relation.
    3.	No partial functional dependency of non-prime attributes 
        are on any proper subset of candidate key is allowed.	
                                                                            No transitive functional dependency of non-prime attributes on any super key is allowed. .
    4.	Stronger normal form than 1NF but lesser than 3NF	                Stronger normal form than 1NF and 2NF.
    5.	It eliminates repeating groups in relation.	                        It virtually eliminates all the redundancies.
    6.	The goal of the second normal form is to eliminate redundant data.	The goal of the third normal form is to ensure referential integrity.