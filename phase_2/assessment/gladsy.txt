Implement using WPF forms and pages. 
Include almost all UIs, Layouts, Dialogues,
Brushes etc.

Implement MVVM based view to the WPF forms and pages.

Implement login page with which only 
we will enter into bank system. 
Fixed Credential - username password are hard coded like quest, 4321.

Account
    number  (unique)
    name 
    balance 
    type 
    email
    phone_number 
    address             editable  
    is_active           deleting the account    updatable
    interest_percentage 
    transaction_count
    last_transaction_date
Bank 
    name 
    settings:                   current                             saving 
        min balance             [           ]                       [               ]
        max interest rate       ( ) 1% ( ) 2%  ( ) 3%  [4%] v      ( ) 1% ( ) 2%  ( ) 3% [4%]v
    accounts 

AccountMemRepo [IAccountRepo]
    Deposit                     -- Implement Business Rules also 
    Withdraw 
    C 
    R 
    U 
    D                           -- Mark as deleted 
    CalcluateInterestAndUpdateBalance   

BankMemRepo [IBankRepo]
    Reports like filtered accounts 
    Plan few reports exportable to CSV, JSON, XML.
        1. group by interest_rate 
            find total balance for each rate

            visualize using OxyPlot or 
            LiveChart  
        2. group by transaction_count 
            find total balance for count 
        Exports to CSV, JSON, XML

AccountFileJsonRepo
AccountFileXmlRepo
AccountFileBinaryRepo
AccountFileCsvRepo
AccountSqlRepo

On every deposit and withdraw, 
send the mail to the account holder
by raising the 'event'.


All solid principles should be followed. 

And add documentation comments thorought the app code.

Add exception handlers and debugging informations 
with loggers. 

Conduct unit test and end to end test using MSTest.

App Config to switch the database 
between Memory, SQL, File JSON, File XML, 
File Binary, File CSV.

Backup and Restore data to and from file.

Inherit the account class based on the acccount type.

Implement some animation 
after withdrawal
ie stop actities to the app 
just run animation.

Use Timer to stop activities 
for 30 secs min. Include the 30 secs 
animation with progress bar. 

Sorting the accounts based on balance
using LINQ.

Future:
    We have the remote database 
    access using APIs.



------------------------------------- 1 hour 
    Model : AccountModel 
    IRepo: IAccountRepo 
    Repo: AccountMemRepo : IAccountRepo
    ViewModel: AccountViewModel 
    BankConfig:
        FrmAddAccount 
        AccVueModel
        FrmEditAccount (Later)
------------------------------------- 30 mins 
    Applying Bindings in 
        FrmAddAccount
        FrmListAccount 
-------------------------------------